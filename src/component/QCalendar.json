{
  "type": "component",
  "props": {
    "value": {
      "type": "String",
      "category": "model",
      "desc": "When set as YYYY-mm-dd, the calendar will display the current view on this date. If empty, then it will be changed to the current date",
      "required": true,
      "examples": [
        "2019-04-01",
        "2020-08-08"
      ]
    },
    "view": {
      "type": "String",
      "category": "model",
      "desc": "The type of calendar view to be displayed",
      "values": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "examples": [
        "week",
        "month"
      ]
    },
    "now": {
      "type": "String",
      "category": "model",
      "desc": "This is the currently displayed date (highlighted). If not set, then the current date is used",
      "default": "",
      "examples": [
        "2019-04-01",
        "2020-08-08"
      ]
    },
    "weekdays": {
      "type": "String",
      "category": "model",
      "desc": "This is the days of the week and in which order they are displayed. If you want Monday as the first day of the week, youo would use [1,2,3,4,5,6,0]",
      "default": "[0,1,2,3,4,5,6]",
      "examples": [
        "[1,2,3,4,5,6,0]",
        "[1,2,3,4,5]"
      ]
    },
    "disabled-days": {
      "type": "Array",
      "category": "model",
      "desc": "An array of string dates in the form YYYY-mm-dd that will be disabled",
      "examples": [
        "['2019-04-01', '2019-04-02', '2019-04-03', '2019-04-04']"
      ]
    },
    "locale": {
      "type": "String",
      "category": "model",
      "desc": "Used to change the locale of the calendar",
      "default": "en-us",
      "examples": [
        "de-de",
        "de",
        "fr",
        "pl"
      ]
    },
    "max-days": {
      "type": "String",
      "category": "model",
      "desc": "The number of days to be displayed. Applicable only for custom-interval and scheduler views",
      "default": 7,
      "examples": [
        "14",
        "10"
      ]
    },
    "color": {
      "type": "String",
      "category": "style",
      "desc": "This is the color used current day (now) highlighting. It can be from the Quasar color palette or a CSS hash value (ie: '#0000FF')",
      "default": "",
      "examples": [
        "orange-7",
        "blue-grey-4",
        "#00CCFC"
      ]
    },
    "enable-themes": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turn on theme support",
      "default": false
    },
    "theme": {
      "type": "Object",
      "category": "style",
      "desc": "Object containing keys and values that overrides the calendar's color properties. See online demo for format of a theme",
      "default": "{}"
    },
    "hide-header": {
      "type": "Boolean",
      "category": "style",
      "desc": "Hide the calendar header. Applicable to all views"
    },
    "short-weekday-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Displays the weekday label in short format. For instance, 'Monday' would become 'Mon'"
    },
    "animated": {
      "type": "Boolean",
      "category": "behavior",
      "desc": "Turns on animation"
    },
    "transition-prev": {
      "type": "String",
      "category": "behavior",
      "desc": "When animated property is true, transition to use for previous calendar view",
      "default": "slide-right",
      "examples": [
        "flip-right"
      ]
    },
    "transition-next": {
      "type": "String",
      "category": "behavior",
      "desc": "When animated property is true, transition to use for next calendar view",
      "default": "slide-left",
      "examples": [
        "flip-left"
      ]
    },
    "drag-over-func": {
      "type": "Function",
      "category": "behavior",
      "desc": "The function to handle ondragover events",
      "params": {
        "event": {
          "type": "Object",
          "desc": "The event associated with the ondragover"
        },
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object associated with the date and optional time (if an interval)"
        },
        "type": {
          "type": "String",
          "desc": "This can be 'day', 'interval' or 'resource'"
        },
        "index": {
          "type": "Number",
          "desc": "The column-count index location of the start of the drag (only available if property column-count is set)"
        }
      },
      "examples": [
        ":drag-over-func=\"onDragOver\""
      ]
    },
    "drop-func": {
      "type": "Function",
      "category": "behavior",
      "desc": "The function to handle drop events",
      "params": {
        "event": {
          "type": "Object",
          "desc": "The event associated with the ondrop"
        },
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object associated with the date and optional time (if an interval) of the drop"
        },
        "type": {
          "type": "String",
          "desc": "This can be 'day', 'interval' or 'resource'"
        },
        "index": {
          "type": "Number",
          "desc": "The column-count index location of the start of the drag (only available if property column-count is set)"
        }
      },
      "examples": [
        ":drop-func=\"onDrop\""
      ]
    },
    "no-scroll": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns off the internal scrollbar. Useful if you want to handle your own scrolling",
      "default": ""
    },
    "column-header-before": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns on the column-header-before scoped slot"
    },
    "column-header-after": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns on the column-header-after scoped slot"
    },
    "column-count": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "Applicable only for day view. Show the same day x number of times in columns. Scoped slots get this data as index in passed object",
      "default": 1,
      "examples": [
        "3",
        "5"
      ]
    },
    "column-index-start": {
      "type": [
        "Number",
        "String"
      ],
      "category": "content",
      "desc": "Applicable only for day view. This is the starting index. This allows you to create a paging system (next/prev) when using column-count property",
      "default": 0,
      "examples": [
        "0",
        "2"
      ]
    },
    "short-interval-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Makes interval labels short"
    },
    "interval-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the interval height",
      "default": "40",
      "examples": [
        "60",
        "100"
      ]
    },
    "interval-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of an interval",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "A timestamp object associated with the interval"
        }
      },
      "returns": "A Vue style object",
      "default": "{}",
      "examples": [
        ":interval-style=\"intervalStyle\""
      ]
    },
    "interval-minutes": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The number of minutes in an interval",
      "default": "60",
      "examples": [
        "15",
        "30"
      ]
    },
    "interval-count": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The number intervals to use. If interval-minutes is set to 30 then you would set interval count to 48 â€“ double that of regular",
      "default": "24",
      "examples": [
        "48",
        "96"
      ]
    },
    "interval-start": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The starting interval",
      "default": "0",
      "examples": [
        "6",
        "8"
      ]
    },
    "hour24-format": {
      "type": "Boolean",
      "category": "style",
      "desc": "Show intervals in 24 hour format"
    },
    "day-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the day height",
      "default": "50",
      "examples": [
        "80",
        "100"
      ]
    },
    "day-padding": {
      "type": "String",
      "category": "style",
      "desc": "Overrides the padding to be used for a day element. You can use any CSS padding format",
      "default": "48px 2px",
      "examples": [
        "20px 5px"
      ]
    },
    "day-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of a day",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "A timestamp object associated with the day"
        }
      },
      "returns": "A Vue style object",
      "default": "{}",
      "examples": [
        ":day-style=\"dayStyle\""
      ]
    },
    "min-weeks": {
      "type": [
        "Number",
        "String"
      ],
      "category": "model",
      "desc": "The minimum number of weeks to be displayed",
      "default": 1,
      "examples": [
        "2"
      ]
    },
    "short-month-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Makes the month label short. January becomes Jan..."
    },
    "show-work-weeks": {
      "type": "Boolean",
      "category": "content",
      "desc": "Show work weeks"
    },
    "show-month-label": {
      "type": "Boolean",
      "category": "content",
      "desc": "Shows the month label - this occurs on the 1st of the month"
    },
    "show-day-of-year-label": {
      "type": "Boolean",
      "category": "content",
      "desc": "Show the say of the year - this occurs in the top right of each day element. If show-month-label is true, then that day is skipped"
    },
    "resources": {
      "type": "Array",
      "category": "model",
      "desc": "Required when view is of type scheduler. An array of objects with a single key of label. You can add other keys if you like, which will be passed in on the appropriate scoped slots"
    },
    "resource-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the resource height",
      "default": "70",
      "examples": [
        "80",
        "100"
      ]
    },
    "resource-width": {
      "type": [
        "Number",
        "String"
      ],
      "category": "style",
      "desc": "The maximum width in pixels for the resource width",
      "examples": [
        "120",
        "200"
      ]
    },
    "resource-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of a resource",
      "params": {
        "data": {
          "type": "Object",
          "desc": "The data passed to the function",
          "params": {
            "timestamp": {
              "type": "Object",
              "desc": "A timestamp object associated with the interval"
            },
            "index": {
              "type": "Number",
              "desc": "The resource index"
            },
            "resource": {
              "type": "Object",
              "desc": "The resource object"
            }
          }
        }
      },
      "returns": "A Vue style object",
      "default": "{}",
      "examples": [
        ":resource-style=\"resourceStyle\""
      ]
    }
  },
  "events": {
    "input": {
      "desc": "Emitted when calendar date changes",
      "params": {
        "value": {
          "type": "String",
          "desc": "In YYYY-mm-dd format"
        }
      }
    },
    "change": {
      "desc": "Emitted when the calendar dates change. For instance, if month view, the start contains the timestamp object for the 1st of the month, and end contains the timestamp object for the last day of the month",
      "params": {
        "start": {
          "type": "Object",
          "desc": "The timestamp object for the first valid date being displayed"
        },
        "end": {
          "type": "Object",
          "desc": "The timestamp object for the last valid date being displayed"
        }
      }
    },
    "moved": {
      "desc": "Emitted when the date is moved",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object of the move. For instance, if in month view, this will be the timestamp object containing the 1st of the month"
        }
      }
    },
    "click:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:date": {
      "desc": "Occurs on date button",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },

    "click:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:day": {
      "desc": "Occurs on day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },

    "click:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:interval": {
      "desc": "Occurs on interval area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },

    "click:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:time": {
      "desc": "Occurs on interval time area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },

    "click:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "contextmenu:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mousedown:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseup:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseenter:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseleave:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mousemove:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchstart:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchend:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchmove:resource": {
      "desc": "Occurs on resource area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },

    "click:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "contextmenu:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mousedown:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseup:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseenter:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseleave:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mousemove:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchstart:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchend:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchmove:resource:day": {
      "desc": "Occurs on resource day area",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    }
  },
  "scopedSlots": {
    "day-header": {
      "desc": "",
      "params": {
        "day": {
          "value": "Object",
          "desc": "Timestamp object"
        }
      }
    },
    "day-body": {
      "desc": "",
      "params": {
        "day": {
          "value": "Object",
          "desc": "Timestamp object"
        }
      }
    },
    "intervals-header": {
      "desc": "",
      "params": {
        "days": {
          "value": "Array",
          "desc": "An array of Timestamp objects"
        }
      }
    },
    "interval": {
      "desc": "",
      "params": {
        "timeStartPos": {
          "value": "Function",
          "desc": "Given a time, will return the css top value",
          "params": {
            "time": {
              "type": "String",
              "desc": "Format is HH:mm (24 hour format)"
            }
          }
        },
        "timeDurationHeight": {
          "value": "Function",
          "desc": "Given a duration (in seconds), will return the css height value",
          "params": {
            "duration": {
              "type": "Number",
              "desc": "The number of seconds for the event"
            }
          }
        }
      }
    },
    "column-header-before": {
      "desc": "",
      "params": {
        "day": {
          "value": "Object",
          "desc": "Timestamp object"
        }
      }
    },
    "column-header-after": {
      "desc": "",
      "params": {
        "day": {
          "value": "Object",
          "desc": "Timestamp object"
        }
      }
    },
    "month-label": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": "Timestamp object with monthLabel"
        }
      }
    },
    "day-of-year": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": "Timestamp object"
        }
      }
    },
    "work-week-label": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": "Timestamp object with workWeekLabel"
        }
      }
    },
    "scheduler-resources-header": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    },
    "scheduler-day-header": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    },
    "scheduler-column-header-before": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    },
    "scheduler-column-header-after": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    },
    "scheduler-resource-day": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    },
    "scheduler-resource": {
      "desc": "",
      "params": {
        "data": {
          "value": "Object",
          "desc": ""
        }
      }
    }
  },
  "methods": {
    "prev": {
      "desc": "Triggers component to display previous"
    },
    "next": {
      "desc": "Triggers component to display next"
    },
    "move": {
      "desc": "Triggers component to move for count iterations, depending on positive (forwards) or negative (backwards) value",
      "params": {
        "count": {
          "type": "Number"
        }
      }
    },
    "updateCurrent": {
      "desc": "Update various values to be consistent with current date"
    }
  }
}